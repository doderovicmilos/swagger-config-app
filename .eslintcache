[{"C:\\swagger-config-app\\src\\index.js":"1","C:\\swagger-config-app\\src\\App.js":"2","C:\\swagger-config-app\\src\\reportWebVitals.js":"3","C:\\swagger-config-app\\src\\pages\\Home\\HomePage.js":"4","C:\\swagger-config-app\\src\\pages\\SignUp\\SignUpPage.js":"5","C:\\swagger-config-app\\src\\components\\Navbar\\Navbar.js":"6","C:\\swagger-config-app\\src\\api\\api.js":"7","C:\\swagger-config-app\\src\\reducers\\modalReducer.js":"8","C:\\swagger-config-app\\src\\store\\index.js":"9","C:\\swagger-config-app\\src\\store\\reducers\\index.js":"10","C:\\swagger-config-app\\src\\store\\types.js":"11","C:\\swagger-config-app\\src\\store\\reducers\\modalReducer.js":"12","C:\\swagger-config-app\\src\\pages\\SignUp\\components\\SignUpForm.js":"13","C:\\swagger-config-app\\src\\pages\\LogIn\\LogInPage.js":"14","C:\\swagger-config-app\\src\\pages\\LogIn\\components\\LogInForm.js":"15","C:\\swagger-config-app\\src\\pages\\Config\\ConfigPage.js":"16","C:\\swagger-config-app\\src\\components\\Icons\\CutIcon.js":"17","C:\\swagger-config-app\\src\\components\\Icons\\PasteIcon.js":"18","C:\\swagger-config-app\\src\\components\\Icons\\TrashIcon.js":"19","C:\\swagger-config-app\\src\\components\\Icons\\CopyIcon.js":"20","C:\\swagger-config-app\\src\\pages\\Config\\utils\\extractSegment.js":"21"},{"size":500,"mtime":1609165146989,"results":"22","hashOfConfig":"23"},{"size":1473,"mtime":1609337569408,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1609165146989,"results":"25","hashOfConfig":"23"},{"size":803,"mtime":1609414071150,"results":"26","hashOfConfig":"23"},{"size":2211,"mtime":1609321915730,"results":"27","hashOfConfig":"23"},{"size":868,"mtime":1609414375573,"results":"28","hashOfConfig":"23"},{"size":1705,"mtime":1609412492248,"results":"29","hashOfConfig":"23"},{"size":375,"mtime":1609243080851,"results":"30","hashOfConfig":"23"},{"size":353,"mtime":1609244316605,"results":"31","hashOfConfig":"23"},{"size":152,"mtime":1609321534608,"results":"32","hashOfConfig":"23"},{"size":1552,"mtime":1606380609301,"results":"33","hashOfConfig":"23"},{"size":874,"mtime":1609321534646,"results":"34","hashOfConfig":"23"},{"size":1624,"mtime":1609320748960,"results":"35","hashOfConfig":"23"},{"size":2121,"mtime":1609324082582,"results":"36","hashOfConfig":"23"},{"size":1241,"mtime":1609322410924,"results":"37","hashOfConfig":"23"},{"size":6365,"mtime":1609671613833,"results":"38","hashOfConfig":"23"},{"size":612,"mtime":1609596079230,"results":"39","hashOfConfig":"23"},{"size":899,"mtime":1609668512993,"results":"40","hashOfConfig":"23"},{"size":740,"mtime":1609668513013,"results":"41","hashOfConfig":"23"},{"size":833,"mtime":1609670074884,"results":"42","hashOfConfig":"23"},{"size":1489,"mtime":1609670726213,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1f0o8kh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\swagger-config-app\\src\\index.js",[],["90","91"],"C:\\swagger-config-app\\src\\App.js",["92"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport logo from './logo.svg';\nimport './App.css';\nimport store from \"./store\";\nimport Home from './pages/Home/HomePage';\nimport Config from './pages/Config/ConfigPage';\nimport SignUpPage from \"./pages/SignUp/SignUpPage\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n        {/*<p>*/}\n        {/*  Edit <code>src/App.js</code> and save to reload.*/}\n        {/*</p>*/}\n        {/*<a*/}\n        {/*  className=\"App-link\"*/}\n        {/*  href=\"https://reactjs.org\"*/}\n        {/*  target=\"_blank\"*/}\n        {/*  rel=\"noopener noreferrer\"*/}\n        {/*>*/}\n        {/*  Learn React*/}\n        {/*</a>*/}\n\n        <Router>\n          <Navbar/>\n          <Switch>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route path='/sign-up'>\n              <SignUpPage />\n            </Route>\n            <Route path='/config/:name' children={<Config />}/>\n            {/*<Route path='/person/:id' children={<Person />}></Route>*/}\n            {/*<Route path='*'>*/}\n            {/*  <Error />*/}\n            {/*</Route>*/}\n          </Switch>\n        </Router>\n\n\n\n      </header>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\swagger-config-app\\src\\reportWebVitals.js",[],"C:\\swagger-config-app\\src\\pages\\Home\\HomePage.js",["93"],"C:\\swagger-config-app\\src\\pages\\SignUp\\SignUpPage.js",["94","95"],"import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {registerUser} from \"../../api/api\";\r\nimport Modal from \"react-modal\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SignUpForm from \"./components/SignUpForm\";\r\nimport './signUp.scss';\r\n\r\nconst modalStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '400px',\r\n    height: '345px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst SignUpPage = () => {\r\n  const dispatch = useDispatch();\r\n  // const [user, setUser] = useState({email: '', password: '', repeatedPassword: ''})\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const signUpOpen = useSelector(state => state.modal.signUpOpen);\r\n\r\n  const handleSubmit = (user) => {\r\n\r\n    registerUser(user)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        //error\r\n        if (response.Code) onSubmitError(response);\r\n        //success\r\n        else onSubmitSuccess(response);\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  const onSubmitError = (error) => {\r\n    setError(error);\r\n  };\r\n\r\n  const onSubmitSuccess = (response) => {\r\n    setIsSuccess(true);\r\n  };\r\n\r\n  const onModalClose = () => {\r\n    dispatch({type: \"SIGN_UP_CLOSE\"});\r\n    setError(null);\r\n    setIsSuccess(false);\r\n  }\r\n\r\n  return (\r\n\r\n      <Modal\r\n        isOpen={signUpOpen}\r\n        //onAfterOpen={afterOpenModal}\r\n        onRequestClose={onModalClose}\r\n        style={modalStyles}\r\n        contentLabel=\"Example Modal\"\r\n      >\r\n        {\r\n          error\r\n            ?\r\n            <div className=\"alert alert-danger\" role=\"alert\">{error && error.Code}</div>\r\n            :\r\n            isSuccess\r\n              ?\r\n              <div className=\"alert alert-success\" role=\"alert\">User registration successful!</div>\r\n              :\r\n              <SignUpForm onSubmit={handleSubmit}/>\r\n          }\r\n      </Modal>\r\n\r\n  );\r\n};\r\n\r\nexport default SignUpPage;","C:\\swagger-config-app\\src\\components\\Navbar\\Navbar.js",["96","97","98"],"C:\\swagger-config-app\\src\\api\\api.js",[],"C:\\swagger-config-app\\src\\reducers\\modalReducer.js",[],"C:\\swagger-config-app\\src\\store\\index.js",[],"C:\\swagger-config-app\\src\\store\\reducers\\index.js",[],"C:\\swagger-config-app\\src\\store\\types.js",[],"C:\\swagger-config-app\\src\\store\\reducers\\modalReducer.js",[],"C:\\swagger-config-app\\src\\pages\\SignUp\\components\\SignUpForm.js",[],"C:\\swagger-config-app\\src\\pages\\LogIn\\LogInPage.js",["99","100"],"import React, {useState, useEffect} from 'react';\r\nimport Modal from \"react-modal\";\r\nimport {logInUser, registerUser} from \"../../api/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport LogInForm from './components/LogInForm';\r\n\r\n\r\nconst modalStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '400px',\r\n    height: '345px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  }\r\n};\r\n\r\nconst LogInPage = () => {\r\n  const dispatch = useDispatch();\r\n  const logInOpen = useSelector(state => state.modal.logInOpen);\r\n  const [error, setError] = useState(null);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const onModalClose = () => {\r\n    dispatch({type: \"LOG_IN_CLOSE\"});\r\n    setError(null);\r\n    setIsSuccess(false);\r\n  }\r\n\r\n  const handleSubmit = (user) => {\r\n    logInUser(user)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        //error\r\n        if (response.Code && response.Message) onSubmitError(response);\r\n        //success\r\n        else onSubmitSuccess(response);\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n\r\n  const onSubmitError = (error) => {\r\n    setError(error);\r\n  };\r\n\r\n  const onSubmitSuccess = (response) => {\r\n    if(response && response.token) {\r\n      localStorage.setItem('swaggerApiToken', response.token)\r\n      setIsSuccess(true);\r\n    }\r\n    else setError({Code: 'Unknown', Message:'Unknown error'})\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n    isOpen={logInOpen}\r\n    //onAfterOpen={afterOpenModal}\r\n    onRequestClose={onModalClose}\r\n    style={modalStyles}\r\n    contentLabel=\"Example Modal\"\r\n  >\r\n    {\r\n      error\r\n        ?\r\n        <div className=\"alert alert-danger\" role=\"alert\">{error && error.Message}</div>\r\n        :\r\n        isSuccess\r\n          ?\r\n          <div className=\"alert alert-success\" role=\"alert\">Log in successful!</div>\r\n          :\r\n          <LogInForm onSubmit={handleSubmit}/>\r\n\r\n    }\r\n  </Modal>);\r\n}\r\n\r\nexport default LogInPage;","C:\\swagger-config-app\\src\\pages\\LogIn\\components\\LogInForm.js",[],"C:\\swagger-config-app\\src\\pages\\Config\\ConfigPage.js",["101","102","103","104","105","106"],"C:\\swagger-config-app\\src\\components\\Icons\\CutIcon.js",[],"C:\\swagger-config-app\\src\\components\\Icons\\PasteIcon.js",[],"C:\\swagger-config-app\\src\\components\\Icons\\TrashIcon.js",[],"C:\\swagger-config-app\\src\\components\\Icons\\CopyIcon.js",[],"C:\\swagger-config-app\\src\\pages\\Config\\utils\\extractSegment.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":12},{"ruleId":"111","severity":1,"message":"115","line":1,"column":26,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"116","line":1,"column":26,"nodeType":"113","messageId":"114","endLine":1,"endColumn":35},{"ruleId":"111","severity":1,"message":"117","line":2,"column":9,"nodeType":"113","messageId":"114","endLine":2,"endColumn":19},{"ruleId":"111","severity":1,"message":"118","line":3,"column":22,"nodeType":"113","messageId":"114","endLine":3,"endColumn":33},{"ruleId":"119","severity":1,"message":"120","line":23,"column":13,"nodeType":"121","endLine":23,"endColumn":44},{"ruleId":"119","severity":1,"message":"120","line":26,"column":13,"nodeType":"121","endLine":26,"endColumn":43},{"ruleId":"111","severity":1,"message":"116","line":1,"column":26,"nodeType":"113","messageId":"114","endLine":1,"endColumn":35},{"ruleId":"111","severity":1,"message":"122","line":3,"column":20,"nodeType":"113","messageId":"114","endLine":3,"endColumn":32},{"ruleId":"111","severity":1,"message":"123","line":1,"column":45,"nodeType":"113","messageId":"114","endLine":1,"endColumn":56},{"ruleId":"124","severity":1,"message":"125","line":25,"column":8,"nodeType":"126","endLine":25,"endColumn":10,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":90,"column":61,"nodeType":"130","messageId":"131","endLine":90,"endColumn":63},{"ruleId":"128","severity":1,"message":"129","line":90,"column":95,"nodeType":"130","messageId":"131","endLine":90,"endColumn":97},{"ruleId":"128","severity":1,"message":"132","line":90,"column":95,"nodeType":"130","messageId":"131","endLine":90,"endColumn":97},{"ruleId":"128","severity":1,"message":"132","line":90,"column":111,"nodeType":"130","messageId":"131","endLine":90,"endColumn":113},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'registerUser' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'version'. Either include them or remove the dependency array.","ArrayExpression",["135"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [name, version]",{"range":"138","text":"139"},[1121,1123],"[name, version]"]